from aiogram.filters import BaseFilter
from aiogram.types import Message
from tools import SubStatTools as ST
from config import db_admins_cid_redis, db_analysts_cid_redis
from aiogram.fsm.context import FSMContext


class IsAdminFilter(BaseFilter):
    async def __call__(self, message: Message) -> bool:
        return message.from_user.id in await ST.get_list_admins()


class IsAnalystsFilter(BaseFilter):
    async def __call__(self, message: Message) -> bool:
        return message.from_user.id in await ST.get_list_analysts()


class CheckChatIdFilter(BaseFilter):
    async def __call__(self, message: Message) -> bool:
        chat_and_sub_id = message.text.split("\n")
        if int(chat_and_sub_id[0]) not in await ST.get_list_admins(): # –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ id –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤
            return True
        else:
            await message.answer(f"–ù–µ–ª—å–∑—è –¥–æ–±–∞–≤–ª—è—Ç—å chat_id –∞–¥–º–∏–Ω–∞, –≤–≤–µ–¥–∏—Ç–µ –¥—Ä—É–≥–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ üôÖ‚Äç‚ôÇ")
            return False


class IsAddUserFilter(BaseFilter):
    async def __call__(self, message: Message, state: FSMContext) -> bool:
        return message.text != "–ó–∞–±—Ä–∞—Ç—å –¥–æ—Å—Ç—É–ø"


class CheckCountChatIdFilter(BaseFilter):
    async def __call__(self, message: Message) -> bool:
        chat_ids_list = await ST.get_list_users_keys(db_admins_cid_redis.hgetall(message.from_user.id))
        if chat_ids_list:
            return True
        else:
            await message.answer(text="–í—ã –ø–æ–∫–∞ –Ω–µ –¥–æ–±–∞–≤–∏–ª–∏ –Ω–∏–æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ü§∑‚Äç‚ôÇ")
            return False


class CheckCountSubIdFilter(BaseFilter):
    async def __call__(self, message: Message) -> bool:
        chat_ids_list = await ST.get_list_users_keys(db_analysts_cid_redis.hgetall(message.from_user.id), admin=False)
        if chat_ids_list:
            return True
        else:
            await message.answer(text="–ü–æ–∫–∞ —á—Ç–æ –¥–ª—è –≤–∞—Å –Ω–µ —Ä–∞—Å—à–∞—Ä–∏–ª–∏ –Ω–∏–æ–¥–Ω–æ–≥–æ sub_id ü§∑‚Äç‚ôÇ")
            return False
